import{d as k,u as w,b as i,c as $,o as V,w as s,N as A,f as y,B as v,J as F,i as d,j as _,G as W,r as C,m as T,e as c,g as j,n as h}from"./index-0RBMUp7G.js";const K=k({__name:"CrearButton",props:{text:String},emits:["click"],setup(f){const{global:m}=w();return(a,u)=>{const p=i("v-btn");return V(),$(p,F({style:{background:d(m).current.value.colors.primary,color:d(m).current.value.colors["on-primary"]},elevation:"0"},a.$attrs,{onClick:u[0]||(u[0]=l=>a.$emit("click"))}),{default:s(()=>[A(a.$slots,"default",{},()=>[y(v(f.text),1)])]),_:3},16,["style"])}}}),q=()=>({addConsultorio:async(e,t)=>{try{await _.post("/consultorios",{nombre:e,tratamientos:t})}catch(r){console.error("Error al crear el consultorio:",r)}},updateConsultorio:async e=>{if(console.log("Consultorio a actualizar:",e),!e)return;const t=e.nombre_consultorio,r=e.tratamientos,o=e.id_consultorio;if(!Array.isArray(r)){console.error("Error: tratamientos debe ser un array.");return}try{await _.put(`/consultorios/${o}`,{nombre:t,tratamientos:r})}catch(n){console.error("Error al actualizar el consultorio:",n)}},deleteConsultorio:async e=>{try{await _.delete(`/consultorios/${e.id_consultorio}`)}catch(t){console.error("Error al eliminar el consultorio:",t)}},fetchConsultoriosyTratamientos:async e=>{try{const t=await _.get("/consultorios/tratamientos");e.value=(t.data||[]).map(r=>({id_consultorio:r.id_consultorio,nombre_consultorio:r.nombre_consultorio,tratamientos:r.tratamientos.map(o=>({id_tratamiento:o.id_tratamiento,nombre:o.nombre,descripcion:o.descripcion,costo:o.costo,duracion:o.duracion,color:o.color}))})).sort((r,o)=>(r.id_consultorio??0)-(o.id_consultorio??0))}catch(t){console.error("Error fetching consultorios and tratamientos:",t)}},fetchTratamientos:async e=>{try{const t=await _.get("/tratamientos");e.value=t.data.sort((r,o)=>(r.id_tratamiento??0)-(o.id_tratamiento??0))}catch(t){console.error("Error fetching tratamientos:",t)}},fetchTratamientosPorConsultorio:async e=>{var t;try{const o=((t=(await _.get(`/tratamientos/tratamientosconsul/${e}`)).data)==null?void 0:t.map(n=>({...n,nombre:n.nombre_tratamiento})))||[];return console.log("Tratamientos por consultorio:",o),o}catch(r){return console.error("Error al cargar tratamientos por consultorio:",r),[]}}}),{fetchConsultoriosyTratamientos:G,fetchTratamientos:J,fetchTratamientosPorConsultorio:U}=q(),L=W("consultorios",()=>{const f=C([]),m=C([]),a=C({});return{consultorios:f,tratamientos:m,tratamientosPorConsultorio:a,cargarDatos:async()=>{await Promise.all([G(f),J(m)])},cargarTratamientosPorConsultorio:async l=>l?(a.value[l]||(a.value[l]=await U(l)),a.value[l]):[]}}),H={class:"text-h6 font-weight-bold ma-4"},M=k({__name:"DialogEliminar",props:{modelValue:{type:Boolean},entity:{},entityName:{default:"el elemento"},title:{default:"Confirmar acción"},message:{},actionType:{default:"eliminar"},cancelText:{default:"Cancelar"},confirmText:{default:"Confirmar"},maxWidth:{default:"500px"},persistent:{type:Boolean,default:!0},scrollable:{type:Boolean,default:!1},transition:{default:"dialog-transition"},headerColor:{default:"primary"},cancelColor:{default:"blue darken-1"},confirmColor:{default:"red darken-1"},nameFields:{default:()=>["nombre","name","descripcion","displayText","title","nombre_consultorio","nombre_tratamiento"]}},emits:["update:modelValue","confirm","close"],setup(f,{emit:m}){const a=w(),u=f,p=m,l=T(()=>{if(!u.entity)return"";const o=u.entity;for(const n of u.nameFields){const b=o[n];if(typeof b=="string")return b}return""}),e=T({get:()=>u.modelValue,set:o=>p("update:modelValue",o)}),t=()=>{e.value=!1,p("close")},r=()=>{p("confirm"),t()};return(o,n)=>{const b=i("v-icon"),g=i("v-btn"),E=i("v-toolbar-title"),B=i("v-toolbar"),P=i("v-card-text"),x=i("v-spacer"),N=i("v-card-actions"),S=i("v-card"),D=i("v-dialog");return V(),$(D,{modelValue:e.value,"onUpdate:modelValue":n[0]||(n[0]=z=>e.value=z),"max-width":o.maxWidth,persistent:o.persistent,scrollable:o.scrollable,transition:o.transition},{default:s(()=>[c(S,{style:h({color:d(a).global.current.value.colors["on-surface"],backgroundColor:d(a).global.current.value.colors.background})},{default:s(()=>[c(B,{flat:"",height:"50px",tile:"",dark:"",color:o.headerColor},{default:s(()=>[c(g,{icon:"",dark:"",onClick:t},{default:s(()=>[c(b,null,{default:s(()=>n[1]||(n[1]=[y("mdi-close")])),_:1})]),_:1}),c(E,null,{default:s(()=>[y(v(o.title),1)]),_:1})]),_:1},8,["color"]),c(P,null,{default:s(()=>[j("p",H,v(o.message||`¿Estás seguro de que deseas ${o.actionType} ${o.entityName}${l.value?` "${l.value}"`:""}?`),1)]),_:1}),c(N,null,{default:s(()=>[c(x),c(g,{color:o.cancelColor,style:h({color:d(a).global.current.value.colors.info,backgroundColor:d(a).global.current.value.colors["background-list"]}),text:"",onClick:t},{default:s(()=>[y(v(o.cancelText),1)]),_:1},8,["color","style"]),c(g,{color:o.confirmColor,style:h({color:d(a).global.current.value.colors.error,backgroundColor:d(a).global.current.value.colors["background-list"]}),text:"",onClick:r},{default:s(()=>[y(v(o.confirmText),1)]),_:1},8,["color","style"])]),_:1})]),_:1},8,["style"])]),_:1},8,["modelValue","max-width","persistent","scrollable","transition"])}}});export{M as _,K as a,q as b,L as u};
