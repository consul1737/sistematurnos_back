{"version":3,"file":"js/96.afe3374e.js","mappings":"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","sources":["webpack://pvn-fe/./src/components/notificaciones.vue","webpack://pvn-fe/src/components/notificaciones.vue","webpack://pvn-fe/./src/components/notificaciones.vue?67f5","webpack://pvn-fe/./src/components/notificaciones.vue?ee02"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-row',{staticClass:\"mt-5\"},[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('v-menu',{ref:\"menuFechaFiltro\",attrs:{\"close-on-content-click\":false,\"transition\":\"scale-transition\",\"offset-y\":\"\",\"min-width\":\"290px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-text-field',_vm._g(_vm._b({attrs:{\"label\":\"Filtrar por Fecha\",\"prepend-icon\":\"mdi-calendar\",\"readonly\":\"\",\"outlined\":\"\",\"dense\":\"\"},model:{value:(_vm.filtroFecha),callback:function ($$v) {_vm.filtroFecha=$$v},expression:\"filtroFecha\"}},'v-text-field',attrs,false),on))]}}]),model:{value:(_vm.menuFechaFiltro),callback:function ($$v) {_vm.menuFechaFiltro=$$v},expression:\"menuFechaFiltro\"}},[_c('v-date-picker',{on:{\"input\":function($event){_vm.menuFechaFiltro = false}},model:{value:(_vm.filtroFecha),callback:function ($$v) {_vm.filtroFecha=$$v},expression:\"filtroFecha\"}})],1)],1),_c('v-col',{staticClass:\"d-flex align-center justify-center\",attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.cargarTurnos}},[_vm._v(\"Filtrar Turnos\")])],1)],1),_c('v-card',[_c('v-card-title',{staticClass:\"text-h5\"},[_vm._v(\"Turnos Programados\")]),_c('v-card-text',[_c('v-simple-table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Seleccionar\")]),_c('th',[_vm._v(\"Paciente\")]),_c('th',[_vm._v(\"Consultorio\")]),_c('th',[_vm._v(\"Fecha\")]),_c('th',[_vm._v(\"Hora\")]),_c('th',[_vm._v(\"Teléfono\")])])]),_c('tbody',_vm._l((_vm.turnos),function(turno){return _c('tr',{key:turno.id_turno},[_c('td',[_c('v-checkbox',{attrs:{\"value\":turno.id_turno,\"label\":'Turno ' + turno.id_turno},model:{value:(_vm.turnosSeleccionados),callback:function ($$v) {_vm.turnosSeleccionados=$$v},expression:\"turnosSeleccionados\"}})],1),_c('td',[_vm._v(_vm._s(turno.nombre_paciente))]),_c('td',[_vm._v(_vm._s(turno.consultorio))]),_c('td',[_vm._v(_vm._s(turno.fecha))]),_c('td',[_vm._v(_vm._s(turno.hora))]),_c('td',[_vm._v(_vm._s(turno.telefono))])])}),0)])],1)],1),_c('v-card',{staticClass:\"mt-5\"},[_c('v-card-title',{staticClass:\"text-h5\"},[_vm._v(\"Escribir Mensaje\")]),_c('v-card-text',[_c('v-textarea',{attrs:{\"label\":\"Escribe el mensaje para enviar por WhatsApp\",\"outlined\":\"\",\"dense\":\"\",\"rows\":\"4\",\"required\":\"\"},model:{value:(_vm.mensaje),callback:function ($$v) {_vm.mensaje=$$v},expression:\"mensaje\"}}),_c('v-alert',{staticClass:\"mt-3\",attrs:{\"type\":\"info\"}},[_vm._v(\" Puedes usar los siguientes marcadores en el mensaje para personalizarlo: \"),_c('ul',[_c('li',[_c('b',[_vm._v(\"{PACIENTE}\")]),_vm._v(\": Nombre del paciente\")]),_c('li',[_c('b',[_vm._v(\"{CONSULTORIO}\")]),_vm._v(\": Nombre del consultorio\")]),_c('li',[_c('b',[_vm._v(\"{TRATAMIENTO}\")]),_vm._v(\": Tratamiento asignado\")]),_c('li',[_c('b',[_vm._v(\"{FECHA}\")]),_vm._v(\": Fecha del turno\")]),_c('li',[_c('b',[_vm._v(\"{HORA}\")]),_vm._v(\": Hora del turno\")])])])],1),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":_vm.enviarNotificaciones}},[_vm._v(\"Enviar Notificaciones\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <!-- Sección para Filtrar Turnos -->\r\n    <v-row class=\"mt-5\">\r\n      <v-col cols=\"12\" md=\"6\">\r\n        <v-menu\r\n          ref=\"menuFechaFiltro\"\r\n          v-model=\"menuFechaFiltro\"\r\n          :close-on-content-click=\"false\"\r\n          transition=\"scale-transition\"\r\n          offset-y\r\n          min-width=\"290px\"\r\n        >\r\n          <template #activator=\"{ on, attrs }\">\r\n            <v-text-field\r\n              v-model=\"filtroFecha\"\r\n              label=\"Filtrar por Fecha\"\r\n              prepend-icon=\"mdi-calendar\"\r\n              readonly\r\n              v-bind=\"attrs\"\r\n              v-on=\"on\"\r\n              outlined\r\n              dense\r\n            />\r\n          </template>\r\n          <v-date-picker\r\n            v-model=\"filtroFecha\"\r\n            @input=\"menuFechaFiltro = false\"\r\n          ></v-date-picker>\r\n        </v-menu>\r\n      </v-col>\r\n      <v-col cols=\"12\" md=\"6\" class=\"d-flex align-center justify-center\">\r\n        <v-btn color=\"primary\" @click=\"cargarTurnos\">Filtrar Turnos</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <!-- Sección para Mostrar Turnos Programados -->\r\n    <v-card>\r\n      <v-card-title class=\"text-h5\">Turnos Programados</v-card-title>\r\n      <v-card-text>\r\n        <v-simple-table>\r\n          <thead>\r\n            <tr>\r\n              <th>Seleccionar</th>\r\n              <th>Paciente</th>\r\n              <th>Consultorio</th>\r\n              <th>Fecha</th>\r\n              <th>Hora</th>\r\n              <th>Teléfono</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"turno in turnos\" :key=\"turno.id_turno\">\r\n              <td>\r\n                <v-checkbox\r\n                  v-model=\"turnosSeleccionados\"\r\n                  :value=\"turno.id_turno\"\r\n                  :label=\"'Turno ' + turno.id_turno\"\r\n                />\r\n              </td>\r\n              <td>{{ turno.nombre_paciente }}</td>\r\n              <td>{{ turno.consultorio }}</td>\r\n              <td>{{ turno.fecha }}</td>\r\n              <td>{{ turno.hora }}</td>\r\n              <td>{{ turno.telefono }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </v-card-text>\r\n    </v-card>\r\n\r\n    <!-- Sección para Escribir el Mensaje -->\r\n    <v-card class=\"mt-5\">\r\n      <v-card-title class=\"text-h5\">Escribir Mensaje</v-card-title>\r\n      <v-card-text>\r\n        <v-textarea\r\n          v-model=\"mensaje\"\r\n          label=\"Escribe el mensaje para enviar por WhatsApp\"\r\n          outlined\r\n          dense\r\n          rows=\"4\"\r\n          required\r\n        />\r\n        <v-alert type=\"info\" class=\"mt-3\">\r\n          Puedes usar los siguientes marcadores en el mensaje para personalizarlo:\r\n          <ul>\r\n            <li><b>{PACIENTE}</b>: Nombre del paciente</li>\r\n            <li><b>{CONSULTORIO}</b>: Nombre del consultorio</li>\r\n            <li><b>{TRATAMIENTO}</b>: Tratamiento asignado</li>\r\n            <li><b>{FECHA}</b>: Fecha del turno</li>\r\n            <li><b>{HORA}</b>: Hora del turno</li>\r\n          </ul>\r\n        </v-alert>\r\n      </v-card-text>\r\n      <v-card-actions>\r\n        <v-btn color=\"primary\" @click=\"enviarNotificaciones\">Enviar Notificaciones</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      menuFechaFiltro: false,\r\n      filtroFecha: '', // Fecha seleccionada para filtrar turnos\r\n      turnos: [], // Lista de turnos cargados desde el backend\r\n      turnosSeleccionados: [], // Lista de turnos seleccionados por el usuario\r\n      mensaje: '', // Mensaje base para enviar notificaciones\r\n    };\r\n  },\r\n  methods: {\r\n    // Cargar turnos desde el backend\r\n    async cargarTurnos() {\r\n      try {\r\n        const response = await axios.get('/Calendarturnos', {\r\n          params: { fecha: this.filtroFecha }, // Filtrar por fecha si se especifica\r\n        });\r\n        this.turnos = response.data;\r\n      } catch (error) {\r\n        console.error('Error al cargar turnos:', error);\r\n        this.$toast.error('Error al cargar los turnos.');\r\n      }\r\n    },\r\n    // Enviar notificaciones a los turnos seleccionados\r\n    async enviarNotificaciones() {\r\n      if (!this.mensaje || this.turnosSeleccionados.length === 0) {\r\n        this.$toast.error(\r\n          'Por favor, seleccione al menos un turno y escriba un mensaje.'\r\n        );\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Crear una lista de turnos seleccionados con idTurno y numero\r\n        const turnosConTelefono = this.turnos.filter(turno =>\r\n          this.turnosSeleccionados.includes(turno.id_turno)\r\n        ).map(turno => ({\r\n          idTurno: turno.id_turno,\r\n          numero: turno.telefono, // Asegúrate de que el número está disponible\r\n        }));\r\n\r\n        // Enviar notificaciones al backend con los turnos seleccionados\r\n        const response = await axios.post('/enviar-notificaciones', {\r\n          turnos: turnosConTelefono, // Enviar la lista con el formato adecuado\r\n          mensajeBase: this.mensaje, // El mensaje base puede contener placeholders\r\n        });\r\n\r\n        this.$toast.success('Notificaciones enviadas con éxito.');\r\n        this.turnosSeleccionados = []; // Limpiar selección\r\n        this.mensaje = ''; // Limpiar mensaje\r\n      } catch (error) {\r\n        console.error('Error al enviar notificaciones:', error);\r\n        this.$toast.error('Error al enviar las notificaciones.');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Cargar turnos al montar el componente\r\n    this.cargarTurnos();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos opcionales */\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./notificaciones.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./notificaciones.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./notificaciones.vue?vue&type=template&id=ffd647ca&scoped=true\"\nimport script from \"./notificaciones.vue?vue&type=script&lang=js\"\nexport * from \"./notificaciones.vue?vue&type=script&lang=js\"\nimport style0 from \"./notificaciones.vue?vue&type=style&index=0&id=ffd647ca&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ffd647ca\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","ref","scopedSlots","_u","key","fn","on","_g","_b","model","value","filtroFecha","callback","$$v","expression","menuFechaFiltro","$event","cargarTurnos","_v","_l","turnos","turno","id_turno","turnosSeleccionados","_s","nombre_paciente","consultorio","fecha","hora","telefono","mensaje","enviarNotificaciones","staticRenderFns","data","methods","response","axios","get","params","error","console","$toast","length","turnosConTelefono","filter","includes","map","idTurno","numero","post","mensajeBase","success","mounted","component"],"sourceRoot":""}